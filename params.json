{"name":"Nugetsolutionvalidator","tagline":"Package that validates Nuget configuration within a solution","body":"# NuGetSolutionValidator\r\n\r\n### NugetSolutionValidator is a tool that is meant to do two things:\r\n1. Ensure that any Nuget packages used in projects within a solution are the same version\r\n2. Ensure that any NuSpec files built from projects within a solution contain their proper dependencies\r\n\r\nEach of these are ran as unit tests using either NUnit or Microsoft's Unit Testing framework.  With these in place, any mismatches should be found during the execution of the tests manually, or during a CI build.\r\n\r\n### Nuget\r\nNugetSolutionValidator is available on the public Nuget feed at http://nuget.org/packages?q=nugetsolutionvalidator and can be installed by running the command:\r\n\r\n#### NUnit\r\n```\r\nInstall-Package NuGetSolutionValidator.NUnit\r\n```\r\n\r\n#### MsTest\r\n```\r\nInstall-Package NuGetSolutionValidator.MsTest\r\n```\r\n\r\n\r\n### Library Structure\r\nNugetSolutionValidator consists of the following projects:\r\n* __NugetSolutionValidator:__ Domain Services library, this is where the knowledge of reading files and validating is kept\r\n* __NugetSolutionValidator.NUnit:__ Contains a single NUnit TestFixture that runs validations in the NugetSolutionValidator library as tests\r\n* __NugetSolutionValidator.MsTest:__ Contains a single Microsoft TestClass that runs validations in the NugetSolutionValidator library as tests\r\n* __NugetSolutionValidator.Tests:__ Unit Test library that tests the Domain Services in NugetSolutionValidator\r\n* __SampleProject:__ Sample project to see how the tests are installed and work\r\n\r\n### Sample Usages\r\nGiven:\r\n* Solution named MySolution\r\n* NuSpec file name 'SomeGreatThing' that packages the projects: 'GreatProject1' and 'GreatProject2' libraries into a nuget package\r\n\r\n#### Verify that all packages are the same version, excluding test projects\r\n```c#\r\n\tvar solutionBuilder = new SolutionBuilder();\r\n\tvar request = new BuildSolutionRequest()\r\n\t\t.WithSolutionName(\"MySolutionName\")\r\n\t\t.WithProjects(p => !p.Name.EndsWith(\"Test\"))\r\n\t\t;\r\n\t_solution = solutionBuilder.Build(request);\r\n```\r\n\r\n#### Verify that a nuspec package has all its dependencies configured\r\n```c#\r\n\tvar solutionBuilder = new SolutionBuilder();\r\n\tvar request = new BuildSolutionRequest()\r\n\t\t.WithSolutionName(\"MySolution\")\r\n\t\t.WithNuSpec(\"SomeGreatThing\")\r\n\t\t.WithNuSpecProjectSet(\"SomeGreatThing\", new[] { \"GreatProject1\",\"GreatProject2\" })\r\n\t\t;\r\n\r\n\t_solution = solutionBuilder.Build(request);\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}